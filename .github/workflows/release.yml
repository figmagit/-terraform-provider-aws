# This GitHub action can publish assets for release when a tag is created.
# Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
#
# This uses an action (hashicorp/ghaction-import-gpg) that assumes you set your
# private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
# secret. If you would rather own your own GPG handling, please fork this action
# or use an alternative one for key handling.
#
# You will need to pass the `--batch` flag to `gpg` in your signing step
# in `goreleaser` to indicate this is being used in a non-interactive mode.
#
name: Figma Release
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2.3.4
      -
        name: Unshallow
        run: git fetch --prune --unshallow
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      -
        id: import_gpg
        name: GPG key import
        # 2022-07-14: In this import_gpg step, we started encountering this error.
        #
        #   gpg-agent: a gpg-agent is already running - not starting a new one
        #
        # It happens even if we take an old commit and rerun goreleaser, so its
        # likely that the github actions environment added a gpg-agent recently
        # and broke ghaction-import-gpg.
        #
        # Below is the logic lifted from ghaction-import-gpg with the exception
        # of launching the gpg-agent daemon
        # https://github.com/hashicorp/ghaction-import-gpg/blob/main/action.yml
        run: |
          # import GPG key and prime passphrase
          echo -e "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --import --batch --no-tty
          echo "hello world" > temp.txt
          gpg --detach-sig --yes -v --output=/dev/null --pinentry-mode loopback --passphrase "${{ secrets.PASSPHRASE }}" temp.txt
          rm temp.txt

          # set gpg fingerprint output
          fingerprint=$(gpg --with-colons --list-keys | awk -F: '/^pub/ { print $5 }')
          echo "::set-output name=fingerprint::$fingerprint"
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2.5.0
        with:
          version: latest
          args: release --rm-dist --timeout 120m
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
